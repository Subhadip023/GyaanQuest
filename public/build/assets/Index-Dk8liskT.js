import { a as i, j as e, m as y } from "./app-a17V35Ex.js"; import { B as f } from "./Button-Cyp5wEiH.js"; import { M as D } from "./Modal-hEi01PnJ.js"; import { T as C, a as k, b as p, E as z, D as R } from "./TableData-BLUbpIal.js"; import { A as T } from "./AdminLayout-CAvGt-wk.js"; import { I as h } from "./InputLabel-DUvnhS6U.js"; import { T as I, I as v } from "./TextInput-CbkplM6V.js"; import "./transition-HQgnNRUc.js"; import "./index-Dca8f_Q-.js"; import "./Loader-fKDPiDcW.js"; import "./SideBarLink-DHPaqsYh.js"; import "./CollabsableDiv-xu1Z0SUw.js"; import "./CollabsableLinks-C6wOpsms.js"; const N = { id: null, name: null, description: "", user_id: null, display: "public", active: !0 }, S = i.forwardRef(function ({ className: n = "", isFocused: l = !1, ...t }, c) { const m = i.useRef(null); return i.useImperativeHandle(c, () => ({ focus: () => { var d; return (d = m.current) == null ? void 0 : d.focus() } })), i.useEffect(() => { var d; l && ((d = m.current) == null || d.focus()) }, [l]), e.jsx("textarea", { ...t, className: "rounded-md border-gray-300 shadow-sm dark:text-white dark:bg-slate-800 focus:border-indigo-500 focus:ring-indigo-500 " + n, ref: m }) }), w = i.forwardRef(function ({ name: n, options: l = [], value: t, onChange: c, className: m = "", isFocused: d = !1, ...j }, x) { const r = i.useRef(); return i.useImperativeHandle(x, () => ({ focus: () => { var s; return (s = r.current) == null ? void 0 : s.focus() } })), i.useEffect(() => { var s; d && ((s = r.current) == null || s.focus()) }, [d]), e.jsx("div", { className: `flex  gap-2 ${m}`, ref: r, children: l.map(s => e.jsxs("label", { className: "inline-flex items-center", children: [e.jsx("input", { type: "radio", name: n, value: s.value, checked: t === s.value, onChange: g => c(g.target.value), className: "text-indigo-600 focus:ring-indigo-500", ...j }), e.jsx("span", { className: "ml-2 capitalize text-md text-gray-700 dark:text-gray-300", children: s.label ?? s.value })] }, s.value)) }) }); function L({ title: o, titleId: n, ...l }, t) { return i.createElement("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", strokeWidth: 1.5, stroke: "currentColor", "aria-hidden": "true", "data-slot": "icon", ref: t, "aria-labelledby": n }, l), o ? i.createElement("title", { id: n }, o) : null, i.createElement("path", { strokeLinecap: "round", strokeLinejoin: "round", d: "M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z" })) } const M = i.forwardRef(L); function B({ show: o, onClose: n, onConfirm: l, title: t = "Are you sure?", message: c = "This action cannot be undone." }) { return e.jsx(D, { show: o, onClose: n, maxWidth: "sm", children: e.jsxs("div", { className: "p-6", children: [e.jsxs("div", { className: "flex items-center space-x-3", children: [e.jsx(M, { className: "h-6 w-6 text-yellow-500" }), e.jsx("h2", { className: "text-lg font-semibold", children: t })] }), e.jsx("p", { className: "mt-4 text-sm text-gray-600 dark:text-gray-300", children: c }), e.jsxs("div", { className: "mt-6 flex justify-end gap-2", children: [e.jsx(f, { btnType: "secondary", onClick: n, children: "Cancel" }), e.jsx(f, { btnType: "danger", onClick: l, children: "Yes, Confirm" })] })] }) }) } function U({ quizzes: o }) { var b; const [n, l] = i.useState(!1), [t, c] = i.useState(!1), [m, d] = i.useState(null), [j, x] = i.useState(!1), r = y(N), s = y(N), g = a => { s.setData(a), c(!0) }, E = a => { a.preventDefault(), r.post(route("quizzes.store"), { onSuccess: () => { l(!1), r.reset() }, onError: u => { console.error("Validation errors:", u) }, onFinish: () => { console.log("Quiz submission complete") } }) }, Q = a => { a.preventDefault(), s.put(route("quizzes.update", s.data.id), { preserveScroll: !0, onSuccess: () => { c(!1), s.reset() }, onError: u => { console.error("Validation errors:", u) } }) }, A = () => { }; return e.jsxs(T, { title: "Quiz", heading: "Quiz", children: [e.jsx(B, { show: j, onClose: () => x(!1), onConfirm: A, title: "Delete Quiz?", message: "Are you sure you want to delete this quiz? This action cannot be undone." }), e.jsx(D, { show: n || t, onClose: () => { (!s.processing || !r.processing) && (l(!1), c(!1)) }, maxWidth: "lg", children: e.jsx("div", { className: "w-full p-5", children: e.jsxs("form", { onSubmit: t ? Q : E, children: [e.jsxs("div", { className: "mb-6 w-full", children: [e.jsx(h, { value: "Enter Role Name" }), e.jsx(I, { name: "name", className: "w-full", value: t ? s.data.name : r.data.name, onChange: a => t ? s.setData("name", a.target.value) : r.setData("name", a.target.value) }), (t ? s.errors.name : r.errors.name) && e.jsx(v, { message: t ? s.errors.name : r.errors.name })] }), e.jsxs("div", { className: "mb-6 w-full", children: [e.jsx(h, { value: `Enter Quiz Description (${(b = t ? s.data.description : r.data.description) == null ? void 0 : b.trim().split(/\s+/).filter(Boolean).length})` }), e.jsx(S, { name: "description", className: "w-full h-32", value: t ? s.data.description : r.data.description, onChange: a => t ? s.setData("description", a.target.value) : r.setData("description", a.target.value) }), (t ? s.errors.description : r.errors.description) && e.jsx(v, { message: t ? s.errors.description : r.errors.description })] }), e.jsxs("div", { className: "mb-6 w-full", children: [e.jsx(h, { value: "Visibility" }), e.jsx(w, { name: "display", value: t ? s.data.display : r.data.display, onChange: a => t ? s.setData("display", a) : r.setData("display", a), options: [{ value: "public", label: "Public" }, { value: "private", label: "Private" }, { value: "room", label: "Room Only" }], className: "mt-2" }), (t ? s.errors.display : r.errors.display) && e.jsx(v, { message: t ? s.errors.display : r.errors.display })] }), e.jsxs("div", { className: "mb-6 w-full", children: [e.jsx(h, { value: "Is this Quiz Active?" }), e.jsx(w, { name: "active", value: String(t ? s.data.active : r.data.active), onChange: a => t ? s.setData("active", a === "true") : r.setData("active", a === "true"), options: [{ value: "true", label: "Yes" }, { value: "false", label: "No" }], className: "mt-2" }), (t ? s.errors.active : r.errors.active) && e.jsx(v, { message: t ? s.errors.active : r.errors.active })] }), e.jsxs("div", { className: "w-full flex items-center justify-end gap-x-2", children: [e.jsx(f, { btnType: "secondary", disabled: t ? s.processing : r.processing, onClick: a => { a.preventDefault(), l(!1), c(!1) }, children: "Close" }), e.jsx(f, { btnType: "success", disabled: t ? s.processing : r.processing, children: "Submit" })] })] }) }) }), e.jsxs("section", { children: [e.jsx("div", { className: "w-full flex items-center justify-end gap-x-2", children: e.jsx(f, { onClick: a => { a.preventDefault(), l(!0) }, children: "add quize" }) }), e.jsx(C, { columns: ["#", "Name", "Description", "Visible", "Active", "Action"], children: o.length == 0 ? e.jsx("div", { className: "text-red-500  font-bold w-full  my-5", children: "No Quiz found on  " }) : o.map((a, u) => e.jsxs(k, { isLast: u === o.length - 1, children: [e.jsx(p, { children: u + 1 }), e.jsx(p, { children: a.name }), e.jsx(p, { children: a.description ? a.description : "No Description available" }), e.jsx(p, { children: a.display }), e.jsx(p, { children: a.active ? "Active" : "NotActive" }), e.jsxs(p, { children: [e.jsx(z, { onClick: () => g(a) }), e.jsx(R, { onClick: () => { x(!0), d(a.id) } })] })] }, u || a.id)) })] })] }) } export { U as default };
